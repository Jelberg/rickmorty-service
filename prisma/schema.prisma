// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model types {
  id    Int      @id @default(autoincrement())
  name  String   // ['EPISODES', 'CHARACTERS']
  type_stat  type_stat[]
}

model status {
  id   Int      @id @default(autoincrement())
  name String   // ['ACTIVE', 'SUSPENDED', 'CANCELLED', 'ACTIVE']
  type_stat type_stat[]
}

model type_stat {
  id        Int      @id @default(autoincrement())
  fk_type   Int
  fk_state  Int

  types    types    @relation(fields: [fk_type], references: [id])
  status   status   @relation(fields: [fk_state], references: [id])
  characters  characters[]
  episodes    episodes[]
}

model characters {
  id        Int      @id @default(autoincrement())
  fk_typestat Int
  name      String

  type_stat   type_stat   @relation(fields: [fk_typestat], references: [id])
  subc_char_epis subc_char_epis[]
  epis_char      epis_char[]
}

model episodes {
  id         Int      @id @default(autoincrement())
  fk_typestat Int
  name       String
  episode    String
  is_deleted Boolean  @default(false)
  duration   Int      // Duración en minutos (Máximo 60 MIN)

  type_stat   type_stat   @relation(fields: [fk_typestat], references: [id])
  subc_char_epis subc_char_epis[]
  epis_char      epis_char[]
}

model categories {
  id        Int       @id @default(autoincrement())
  name      String
  subcategories  subcategories[]
}

model subcategories {
  id        Int       @id @default(autoincrement())
  name      String
  fk_cate   Int       // Campo escalar para la clave foránea

  categories     categories     @relation(fields: [fk_cate], references: [id])
  subc_char_epis subc_char_epis[]
}

model epis_char {
  id         Int      @id @default(autoincrement())
  fk_char    Int      // Campo escalar para la clave foránea
  fk_epis    Int      // Campo escalar para la clave foránea
  fk_time    Int      // Campo escalar para la clave foránea
  duration   Int      // Duración en minutos

  characters    characters  @relation(fields: [fk_char], references: [id])
  episodes      episodes    @relation(fields: [fk_epis], references: [id])
  times         times       @relation(fields: [fk_time], references: [id])
}

model subc_char_epis {
  id         Int      @id @default(autoincrement())
  fk_char    Int      // Campo escalar para la clave foránea
  fk_subc    Int      // Campo escalar para la clave foránea
  fk_epis    Int      // Campo escalar para la clave foránea

  characters     characters     @relation(fields: [fk_char], references: [id])
  subcategories  subcategories  @relation(fields: [fk_subc], references: [id])
  episodes       episodes       @relation(fields: [fk_epis], references: [id])

  @@unique([fk_char, fk_subc, fk_epis]) // Garantiza la unicidad de esta combinación
}

model times {
  id      Int      @id @default(autoincrement())
  init    DateTime
  finish  DateTime

  epis_char    epis_char[]
}
